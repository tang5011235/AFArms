apply plugin: 'com.android.library'
//apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.android['compileSdkVersion']

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android['minSdkVersion']
        targetSdkVersion rootProject.ext.android['targetSdkVersion']
        versionCode rootProject.ext.android['versionCode']
        versionName rootProject.ext.android['versionName']
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.dependencies['appcompat-v7']
    api 'com.android.support.constraint:constraint-layout:1.1.0'

    //test
    implementation 'com.android.support:support-v4:26.1.0'
    testImplementation rootProject.ext.dependencies['junit']
    androidTestImplementation rootProject.ext.dependencies['runner']
    androidTestImplementation rootProject.ext.dependencies['espresso-core']
    api 'com.jakewharton.timber:timber:4.7.0'

    //httpLog
    debugApi(rootProject.ext.dependencies['loggingInterceptor']) {
        exclude group: 'org.json', module: 'json'
    }

    //fragmentation
    api rootProject.ext.dependencies["fragmentation"]
    api rootProject.ext.dependencies["fragmentation-core"]
    api rootProject.ext.dependencies["fragmentation-swipeback"]
    //implementation rootProject.ext.dependencies["eventbus-activity-scope"]

    //eventbus 解耦通讯
    api rootProject.ext.dependencies["androideventbus"]

    //glide
    api(rootProject.ext.dependencies["glide"]) {
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["glide-loader-okhttp3"]


    //retrofit
    api rootProject.ext.dependencies["retrofit"]
    api(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude group: 'com.squareup.retrofit2'
    }
    api(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        transitive = false
    }

    //rxjava
    api(rootProject.ext.dependencies["rxjava2"]) {
        exclude group: 'annotation'
    }
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude group: 'io.reactivex.rxjava2'
    }
    api(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude group: 'io.reactivex.rxjava2'
    }
    api rootProject.ext.dependencies["rxlifecycle2-components"]

    //rxcache
    implementation(rootProject.ext.dependencies["rxcache2"]) {
        exclude group: 'io.reactivex.rxjava2'
    }

    //rxbinding
    api(rootProject.ext.dependencies["rxbinding2"]) {
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'com.android.support'
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["rxbinding2-appcompat-v7"]) {
        exclude module: 'rxandroid'
        exclude module: 'rxbinding'
        exclude group: 'com.android.support'
    }
    api(rootProject.ext.dependencies["rxbinding2-design"]) {
        exclude module: 'rxandroid'
        exclude module: 'rxbinding'
        exclude module: 'support-compat'
        exclude module: 'appcompat-v7'
        exclude module: 'support-fragment'
        exclude module: 'support-core-ui'
        exclude module: 'support-core-utils'
        exclude module: 'support-annotations'
    }

    //MultipleStatusView
    implementation rootProject.ext.dependencies["multiple-status-view"]

    //butterKnife
    api(rootProject.ext.dependencies['butterknife']) {
        exclude group: 'com.android.support'
    }
    annotationProcessor rootProject.ext.dependencies['butterknife-compiler']

    //dagger
    compileOnly rootProject.ext.dependencies["javax.annotation"]
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]

    api rootProject.ext.dependencies["utilcode"]
}
